syntax = "proto3";
package fx.gravity.v1;

import "fx/gravity/v1/genesis.proto";
import "fx/gravity/v1/types.proto";
import "fx/gravity/v1/msgs.proto";
import "fx/gravity/v1/pool.proto";
import "fx/gravity/v1/batch.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/functionx/fx-core/x/gravity/types";

// Query defines the gRPC querier service
service Query {
  // Deployments queries deployments
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gravity/v1beta/params";
  }
  rpc CurrentValset(QueryCurrentValsetRequest)
      returns (QueryCurrentValsetResponse) {
    option (google.api.http).get = "/gravity/v1beta/valset/current";
  }
  rpc ValsetRequest(QueryValsetRequestRequest)
      returns (QueryValsetRequestResponse) {
    option (google.api.http).get = "/gravity/v1beta/valset";
  }
  rpc ValsetConfirm(QueryValsetConfirmRequest)
      returns (QueryValsetConfirmResponse) {
    option (google.api.http).get = "/gravity/v1beta/valset/confirm";
  }
  rpc ValsetConfirmsByNonce(QueryValsetConfirmsByNonceRequest)
      returns (QueryValsetConfirmsByNonceResponse) {
    option (google.api.http).get = "/gravity/v1beta/confirms/{nonce}";
  }
  rpc LastValsetRequests(QueryLastValsetRequestsRequest)
      returns (QueryLastValsetRequestsResponse) {
    option (google.api.http).get = "/gravity/v1beta/valset/requests";
  }
  rpc LastPendingValsetRequestByAddr(QueryLastPendingValsetRequestByAddrRequest)
      returns (QueryLastPendingValsetRequestByAddrResponse) {
    option (google.api.http).get = "/gravity/v1beta/valset/last";
  }
  rpc LastPendingBatchRequestByAddr(QueryLastPendingBatchRequestByAddrRequest)
      returns (QueryLastPendingBatchRequestByAddrResponse) {
    option (google.api.http).get = "/gravity/v1beta/batch/{address}";
  }
  rpc LastEventNonceByAddr(QueryLastEventNonceByAddrRequest)
      returns (QueryLastEventNonceByAddrResponse) {
    option (google.api.http).get =
        "/gravity/v1beta/oracle/event_nonce/{address}";
  }

  rpc LastEventBlockHeightByAddr(QueryLastEventBlockHeightByAddrRequest)
      returns (QueryLastEventBlockHeightByAddrResponse) {
    option (google.api.http).get =
        "/gravity/v1beta/oracle/event/block_height/{address}";
  }

  rpc BatchFees(QueryBatchFeeRequest) returns (QueryBatchFeeResponse) {
    option (google.api.http).get = "/gravity/v1beta/batch_fees";
  }
  rpc LastObservedEthBlockHeight(QueryLastObservedEthBlockHeightRequest)
      returns (QueryLastObservedEthBlockHeightResponse) {
    option (google.api.http).get = "/gravity/v1beta/eth/block_height";
  }

  rpc OutgoingTxBatches(QueryOutgoingTxBatchesRequest)
      returns (QueryOutgoingTxBatchesResponse) {
    option (google.api.http).get = "/gravity/v1beta/batch/outgoing_tx";
  }
  rpc BatchRequestByNonce(QueryBatchRequestByNonceRequest)
      returns (QueryBatchRequestByNonceResponse) {
    option (google.api.http).get = "/gravity/v1beta/batch/{nonce}";
  }

  rpc BatchConfirm(QueryBatchConfirmRequest)
      returns (QueryBatchConfirmResponse) {
    option (google.api.http).get = "/gravity/v1beta/batch/confirm";
  }

  rpc BatchConfirms(QueryBatchConfirmsRequest)
      returns (QueryBatchConfirmsResponse) {
    option (google.api.http).get = "/gravity/v1beta/batch/confirms";
  }
  rpc ERC20ToDenom(QueryERC20ToDenomRequest)
      returns (QueryERC20ToDenomResponse) {
    option (google.api.http).get =
        "/gravity/v1beta/fx_originated/erc20_to_denom";
  }
  rpc DenomToERC20(QueryDenomToERC20Request)
      returns (QueryDenomToERC20Response) {
    option (google.api.http).get =
        "/gravity/v1beta/fx_originated/denom_to_erc20";
  }

  rpc GetDelegateKeyByValidator(QueryDelegateKeyByValidatorRequest)
      returns (QueryDelegateKeyByValidatorResponse) {
    option (google.api.http).get =
        "/gravity/v1beta/query_delegate_key_by_validator";
  }
  rpc GetDelegateKeyByEth(QueryDelegateKeyByEthRequest)
      returns (QueryDelegateKeyByEthResponse) {
    option (google.api.http).get = "/gravity/v1beta/query_delegate_key_by_eth";
  }
  rpc GetDelegateKeyByOrchestrator(QueryDelegateKeyByOrchestratorRequest)
      returns (QueryDelegateKeyByOrchestratorResponse) {
    option (google.api.http).get =
        "/gravity/v1beta/query_delegate_key_by_orchestrator";
  }

  rpc GetPendingSendToEth(QueryPendingSendToEthRequest)
      returns (QueryPendingSendToEthResponse) {
    option (google.api.http).get = "/gravity/v1beta/query_pending_send_to_eth";
  }

  rpc GetIbcSequenceHeightByChannel(QueryIbcSequenceHeightRequest)
      returns (QueryIbcSequenceHeightResponse) {
    option (google.api.http).get = "/gravity/v1beta/query_ibc_sequence_height";
  }
}

message QueryParamsRequest {}
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryCurrentValsetRequest {}
message QueryCurrentValsetResponse { Valset valset = 1; }

message QueryValsetRequestRequest { uint64 nonce = 1; }
message QueryValsetRequestResponse { Valset valset = 1; }

message QueryValsetConfirmRequest {
  uint64 nonce = 1;
  string address = 2;
}
message QueryValsetConfirmResponse { MsgValsetConfirm confirm = 1; }

message QueryValsetConfirmsByNonceRequest { uint64 nonce = 1; }
message QueryValsetConfirmsByNonceResponse {
  repeated MsgValsetConfirm confirms = 1;
}

message QueryLastValsetRequestsRequest {}
message QueryLastValsetRequestsResponse { repeated Valset valsets = 1; }

message QueryLastPendingValsetRequestByAddrRequest { string address = 1; }
message QueryLastPendingValsetRequestByAddrResponse {
  repeated Valset valsets = 1;
}

message QueryBatchFeeRequest {}
message QueryBatchFeeResponse { repeated BatchFees batch_fees = 1; }

message QueryLastPendingBatchRequestByAddrRequest { string address = 1; }
message QueryLastPendingBatchRequestByAddrResponse {
  OutgoingTxBatch batch = 1;
}

message QueryOutgoingTxBatchesRequest {}
message QueryOutgoingTxBatchesResponse { repeated OutgoingTxBatch batches = 1; }

message QueryBatchRequestByNonceRequest {
  uint64 nonce = 1;
  string contract_address = 2;
}
message QueryBatchRequestByNonceResponse { OutgoingTxBatch batch = 1; }

message QueryBatchConfirmRequest {
  uint64 nonce = 1;
  string contract_address = 2;
  string address = 3;
}

message QueryBatchConfirmResponse { MsgConfirmBatch confirm = 1; }

message QueryBatchConfirmsRequest {
  uint64 nonce = 1;
  string contract_address = 2;
}
message QueryBatchConfirmsResponse { repeated MsgConfirmBatch confirms = 1; }

message QueryLastEventNonceByAddrRequest { string address = 1; }
message QueryLastEventNonceByAddrResponse { uint64 event_nonce = 1; }

message QueryERC20ToDenomRequest { string erc20 = 1; }
message QueryERC20ToDenomResponse {
  string denom = 1;
  bool fx_originated = 2;
}

message QueryDenomToERC20Request { string denom = 1; }
message QueryDenomToERC20Response {
  string erc20 = 1;
  bool fx_originated = 2;
}

message QueryDelegateKeyByValidatorRequest { string validator_address = 1; }
message QueryDelegateKeyByValidatorResponse {
  string eth_address = 1;
  string orchestrator_address = 2;
}

message QueryDelegateKeyByEthRequest { string eth_address = 1; }
message QueryDelegateKeyByEthResponse {
  string validator_address = 1;
  string orchestrator_address = 2;
}

message QueryDelegateKeyByOrchestratorRequest {
  string orchestrator_address = 1;
}
message QueryDelegateKeyByOrchestratorResponse {
  string validator_address = 1;
  string eth_address = 2;
}

message QueryPendingSendToEthRequest { string sender_address = 1; }
message QueryPendingSendToEthResponse {
  repeated OutgoingTransferTx transfers_in_batches = 1;
  repeated OutgoingTransferTx unbatched_transfers = 2;
}

message QueryIbcSequenceHeightRequest {
  string sourcePort = 1;
  string sourceChannel = 2;
  uint64 sequence = 3;
}

message QueryIbcSequenceHeightResponse {
  bool found = 1;
  uint64 height = 2;
}

message QueryLastObservedEthBlockHeightRequest {}

message QueryLastObservedEthBlockHeightResponse { uint64 blockHeight = 1; }

message QueryLastEventBlockHeightByAddrRequest { string address = 1; }
message QueryLastEventBlockHeightByAddrResponse { uint64 block_height = 1; }
